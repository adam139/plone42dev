# Development environment buildout
# ================================

[buildout]
parts =
    instance
    test
    coverage-report
    omelette
    zopepy
    zopeskel
    checkversions
    mkrelease
    backup
    repozo

extends =
    p.a.caching1.0b2.cfg
    packages_test.cfg

# Packages to check out/update when buildout is run
auto-checkout =
	eisoo.km
	eisoo.topic
	eisoo.theme
	eisoo.policy
	eisoo.forum
	eisoo.mpsource
	eisoo.operation
	eisoo.memberattachedinfo
    eisoo.theme
    eisoo.topic
    eisoo.behaviors
    collective.gtags
    eisoo.memberattachedinfo
    example.conference
    eisoo.market
    collective.portlet.truereview


# Make sure buildout always attempts to update packages
#always-checkout = force
always-checkout = true

[backup]
recipe = collective.recipe.backup

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
debug-mode = off
verbose-security = on
http-fast-listen = off
zserver-threads = 2
zodb-cache-size = 10000

eggs =
    ${eggs:main}
    ${eggs:devtools}
   
zcml-additional =
   <configure xmlns="http://namespaces.zope.org/zope" xmlns:db="http://namespaces.zope.org/db">
       <include package="z3c.saconfig" file="meta.zcml" />
       <db:engine name="kom" url="mysql://komdba:k0mdba$@192.168.0.7/komdb" />
       <db:session engine="kom" />
   </configure>
zope-conf-additional =
    <product-config beaker>
        session.type            file
        session.data_dir        ${buildout:directory}/var/sessions/data
        session.lock_dir        ${buildout:directory}/var/sessions/lock
        session.key             beaker.session
        session.secret          secret
    </product-config>

  <clock-server>
      method /Plone/@@cron-tick
      period 60
      user admin
      password admin
  </clock-server>
  
environment-vars =
  TZ Hongkong
  PTS_LANGUAGES en zh_CN zh
  zope_i18n_allowed_languages en zh_CN zh
  zope_i18n_compile_mo_files true  
# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs =
    ${eggs:main} 
	${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

# Installs links to all installed packages to ``parts/omelette``.
# On Windows, you need to install junction.exe first
[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${eggs:main}
    ${eggs:devtools}

# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs = 
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

# Installs ZopeSkel, which can be used to create new packages
# Run: ``bin/zopeskel``
[zopeskel]
recipe = zc.recipe.egg
eggs = ZopeSkel
#       zopeskel.dexterity
#       Paste
#       PasteDeploy
#       PasteScript       
       ${eggs:devtools}
       ${eggs:main}
       

# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease
